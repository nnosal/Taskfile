name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for Dockerfile
        id: check_dockerfile
        run: |
          if [ ! -f "${{ github.workspace }}/Dockerfile" ]; then
            echo "ðŸš« No Dockerfile found, skipping CI."
            echo "skip_ci=true" >> $GITHUB_OUTPUT
          else
            echo "skip_ci=false" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        if: steps.check_dockerfile.outputs.skip_ci != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y curl bash
          source .env && task --version
          # curl -fsSL https://taskfile.dev/install.sh | sh -s -- -d -b /usr/local/bin

      - name: Setup Docker Buildx
        if: steps.check_dockerfile.outputs.skip_ci != 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: steps.check_dockerfile.outputs.skip_ci != 'true'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Run Task to build and push Docker image
        if: steps.check_dockerfile.outputs.skip_ci != 'true'
        run: |
          source .env
          export TASK_X_REMOTE_TASKFILES=1
          task --download -y
          task docker_ci:build_push \
            SRC_DIR="${{ github.workspace }}" \
            REGISTRY="ghcr.io" \
            REPOSITORY="$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" \
            SRC="${{ github.workspace }}"
